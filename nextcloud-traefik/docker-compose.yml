networks:
  traefik_proxy:
    external: true
    name: traefik_proxy
services:
  app:
    depends_on:
    - db
    environment:
    - POSTGRES_DB=${DATABASE_NAME}
    - POSTGRES_USER=${DATABASE_USER}
    - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    - POSTGRES_HOST=db
    - POSTGRES_PORT=5432
    - NEXTCLOUD_ADMIN_USER
    - NEXTCLOUD_ADMIN_PASSWORD
    - NEXTCLOUD_TRUSTED_DOMAINS
    - OVERWRITEHOST=${NEXTCLOUD_PUBLIC_FQDN}
    - OVERWRITEPROTOCOL=https
    expose:
    - "80"
    image: nextcloud:19
    labels:
      traefik.docker.network: traefik_proxy
      traefik.enable: "true"
      traefik.http.routers.nextcloud.entrypoints: websecure
      traefik.http.routers.nextcloud.rule: Host(`${NEXTCLOUD_PUBLIC_FQDN}`)
      traefik.http.routers.nextcloud.tls.certresolver: letsencrypt
    networks:
    - default
    - traefik_proxy
    restart: unless-stopped
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - app_data:/var/www/html:rw
  db:
    environment:
    - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    - POSTGRES_USER=${DATABASE_USER}
    - POSTGRES_DB=${DATABASE_NAME}
    - PGDATA=/var/lib/postgresql/data/pgdata
    image: postgres:12.4
    restart: unless-stopped
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - pgsql_data:/var/lib/postgresql/data:rw
version: "2.1"
volumes:
  app_data: {}
  pgsql_data: {}
